3.1 Insert the correct syntax to convert `x` into a floating point number.
x = 5
x = float(x)

3.2 Insert the correct syntax to convert `x` into an integer.
x = 5.5
x = int(x)

3.3 Use the correct membership operator to check if `"apple"` is present in the `fruits` object.
fruits = ["apple", "kiwi"]
if "apple" in fruits:
    print("Yes, apple is a fruit!")

3.4 Use the correct comparison operator to check if 4 is not equal to 8.
if 4 != 8:
    print("4 and 8 is not equal")

3.5 Use the correct logical operator to check if at least one of two statements is True.
if 4 == 5 or 6 == 6:
    print("At least one of the statements is true")

3.6 Use the correct shorthand syntax to write the following conditional expression in one line:
print("Yes") if 5 > 2 else print("No")

3.7 Insert the correct syntax to print `i` as long as `i` is less than 6.
i = 1
while i < 6:
    print(i)
    i += 1


3.8 Insert the correct syntax to stop the loop if `i` is 3.
i = 1
while i < 6:
    if i == 3:
        break
    i += 1


3.9 Insert the correct syntax. In the loop, when `i` is 3, jump directly to the next iteration.
i = 0
while i < 6:
    i += 1
    if i == 3:
        continue
    print(i)

3.10 Insert the correct syntax to print a message once the condition is false.
i = 1
while i < 6:
    print(i)
    i += 1
else:
    print("i is no longer less than 6")

3.11 Insert the correct syntax. If you do not know the number of arguments that will be passed into your function, there is a prefix you can add in the function definition, which prefix?
def my_function(*kids):
    print("The youngest child is " + kids[2])

3.12 If you want to refer to a module by using a different name, you can create an alias. What is the correct syntax for creating an alias for a module?
import mymodule as mx

3.13 What is the correct syntax for importing only the `person1` dictionary from the "mymodule" module?
from mymodule import person1